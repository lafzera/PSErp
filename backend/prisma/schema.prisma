generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SystemConfig {
  id          String   @id @default(uuid())
  key         String   @unique
  value       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  avatar    String?
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Client {
  id          String   @id @default(uuid())
  name        String
  email       String   @unique
  phone       String
  address     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  quotes      Quote[]
  sessions    Session[]
}

model Session {
  id        String   @id @default(uuid())
  clientId  String
  client    Client   @relation(fields: [clientId], references: [id])
  date      DateTime
  status    String   @default("SCHEDULED")
  type      String
  notes     String?
  photos    Photo[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Photo {
  id        String   @id @default(uuid())
  sessionId String
  session   Session  @relation(fields: [sessionId], references: [id])
  url       String
  filename  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Quote {
  id          String      @id @default(uuid())
  clientId    String
  client      Client      @relation(fields: [clientId], references: [id])
  title       String
  description String?
  status      String      @default("DRAFT")
  validUntil  DateTime?
  total       Float       @default(0)
  items       QuoteItem[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model QuoteItem {
  id          String   @id @default(uuid())
  quoteId     String
  quote       Quote    @relation(fields: [quoteId], references: [id])
  description String
  quantity    Int
  unitPrice   Float
  total       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Float
  stock       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
